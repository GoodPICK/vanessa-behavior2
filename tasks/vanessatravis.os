#Использовать v8runner
#Использовать cmdline
#Использовать logos
#Использовать 1commands

Перем ВозможныеКоманды;
Перем Лог;
Перем ЭтоWindows;

Процедура ИнициализацияОкружения()

	Лог = Логирование.ПолучитьЛог("oscript.app.vanessa-runner");
	Лог.УстановитьРаскладку(ЭтотОбъект);

	СистемнаяИнформация = Новый СистемнаяИнформация;
	ЭтоWindows = Найти(ВРег(СистемнаяИнформация.ВерсияОС), "WINDOWS") > 0;

	УровеньЛога = УровниЛога.Информация;
	РежимРаботы = ПолучитьПеременнуюСреды("RUNNER_ENV");
	Если ЗначениеЗаполнено(РежимРаботы) И РежимРаботы = "debug" Тогда
		УровеньЛога = УровниЛога.Отладка;
	КонецЕсли;
	
	Лог.УстановитьУровень(УровеньЛога);

	ВозможныеКоманды = Новый Структура("file, server", "file", "server");
	Парсер = Новый ПарсерАргументовКоманднойСтроки();
	Лог1 = Логирование.ПолучитьЛог("oscript.lib.cmdline");
	Лог1.УстановитьУровень(УровеньЛога);
	
	Парсер.ДобавитьИменованныйПараметр("--tag", "Тэг для запуска", Истина); //

	ОписаниеКоманды = Парсер.ОписаниеКоманды("all");
	Парсер.ДобавитьКоманду(ОписаниеКоманды);
	
	Аргументы = Парсер.РазобратьКоманду(АргументыКоманднойСтроки);

	Если Аргументы = Неопределено Тогда
		Аргументы = Новый Структура("Команда, ЗначенияПараметров", "all", Новый Соответствие);
	КонецЕсли;


	СтрокаЗапуска = "oscript ./tools/runner.os vanessa";
	
	Если Аргументы.ЗначенияПараметров.Получить("--tag") <> Неопределено Тогда
		СистемнаяИнформация.УстановитьПеременнуюСреды("VANESSA_FILTERTAGS", Аргументы.ЗначенияПараметров["--tag"]);
	КонецЕсли;

	Если НЕ ЭтоWindows Тогда
		Если ЗначениеЗаполнено(ПолучитьПеременнуюСреды("WAYLAND_DISPLAY")) Тогда
			СистемнаяИнформация.УстановитьПеременнуюСреды("VANESSA_commandscreenshot", 
				"dbus-send --type=method_call --print-reply --dest=org.gnome.Shell.Screenshot /org/gnome/Shell/Screenshot org.gnome.Shell.Screenshot.Screenshot boolean:true boolean:false string:");
		Иначе
			СистемнаяИнформация.УстановитьПеременнуюСреды("VANESSA_commandscreenshot", "import -window root ");
		КонецЕсли;
	КонецЕсли;

	Результат = ЗапуститьИПодождать(СтрокаЗапуска);
	Если Результат.КодВозврата <> 0 Тогда
		Лог.Ошибка("Код возврат "+Результат.КодВозврата);
		ВызватьИсключение "Неверный код возврата "+ Результат.КодВозврата;
	КонецЕсли;

КонецПроцедуры

Функция ПрочитатьФайлИнформации(Знач ПутьКФайлу)

	Текст = "";
	Файл = Новый Файл(ПутьКФайлу);
	Если Файл.Существует() Тогда
		Чтение = Новый ЧтениеТекста(Файл.ПолноеИмя);
		Текст = Чтение.Прочитать();
		Чтение.Закрыть();
	Иначе
		Текст = "Информации об ошибке нет";
	КонецЕсли;

	Лог.Отладка("файл информации:
	|"+Текст);
	Возврат Текст;

КонецФункции


Функция ЗначениеПоУмолчанию(value, defValue="")
	res = ?( ЗначениеЗаполнено(value), value, defValue);
	Возврат res;
КонецФункции

Функция ЗапуститьИПодождать(СтрокаЗапуска)
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.УстановитьСтроку();

	Процесс = СоздатьПроцесс(СтрокаЗапуска, "./", Истина, Истина);
	Процесс.Запустить();
	ПериодОпросаВМиллисекундах = 1000;
	Если ПериодОпросаВМиллисекундах <> 0 Тогда
		Приостановить(ПериодОпросаВМиллисекундах);
	КонецЕсли;
	Пока НЕ Процесс.Завершен ИЛИ Процесс.ПотокВывода.ЕстьДанные ИЛИ Процесс.ПотокОшибок.ЕстьДанные Цикл
		//Сообщить(""+ ТекущаяДата() + " Завершен:"+Строка(Процесс.Завершен) + Строка(Процесс.ПотокВывода.ЕстьДанные) + Строка(Процесс.ПотокОшибок.ЕстьДанные) );
		Если ПериодОпросаВМиллисекундах <> 0 Тогда
			Приостановить(ПериодОпросаВМиллисекундах);
		КонецЕсли;

		ОчереднаяСтрокаВывода = Процесс.ПотокВывода.Прочитать();
		ОчереднаяСтрокаОшибок = Процесс.ПотокОшибок.Прочитать();

		Если Не ПустаяСтрока(ОчереднаяСтрокаВывода) Тогда
			ОчереднаяСтрокаВывода = СтрЗаменить(ОчереднаяСтрокаВывода, Символы.ВК, "");
			Если ОчереднаяСтрокаВывода <> "" Тогда
				Лог.Информация("%2%1", ОчереднаяСтрокаВывода, Символы.ПС);
				ЗаписьXML.ЗаписатьБезОбработки(ОчереднаяСтрокаВывода);
			КонецЕсли;
		КонецЕсли;

		Если Не ПустаяСтрока(ОчереднаяСтрокаОшибок) Тогда
			ОчереднаяСтрокаОшибок = СтрЗаменить(ОчереднаяСтрокаОшибок, Символы.ВК, "");
			Если ОчереднаяСтрокаОшибок <> "" Тогда
				//Сообщить(ОчереднаяСтрокаОшибок);
				Лог.Информация("%2%1", ОчереднаяСтрокаОшибок, Символы.ПС);
				ЗаписьXML.ЗаписатьБезОбработки(ОчереднаяСтрокаОшибок);
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	ОчереднаяСтрока = СтрЗаменить(Процесс.ПотокВывода.Прочитать(), Символы.ВК, "");
	Лог.Информация("%2%1", ОчереднаяСтрока, Символы.ПС);
	ЗаписьXML.ЗаписатьБезОбработки(ОчереднаяСтрока);
	РезультатРаботыПроцесса = ЗаписьXML.Закрыть();

	Возврат Новый Структура("КодВозврата, Результат", Процесс.КодВозврата, РезультатРаботыПроцесса);

КонецФункции // ЗапуститьИПодождать(СтрокаЗапуска)

Функция Форматировать(Знач Уровень, Знач Сообщение) Экспорт

	Возврат СтрШаблон("%1: %2 - %3", ТекущаяДата(), УровниЛога.НаименованиеУровня(Уровень), Сообщение);

КонецФункции

ИнициализацияОкружения();