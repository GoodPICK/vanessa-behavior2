
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"Тогда(Парам01)","Условие","Если ""Истина"" тогда","Условие. Проверяет выражение встроенного языка","Встроенный язык","Условие");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОкнеПредупрежденияНетТекстаТогда(Парам01)","ВОкнеПредупрежденияНетТекстаТогда","Если в окне предупреждения нет текста ""Нужный текст"" тогда","Условие. Истинно, когда в окне предупреждения нет искомого текста.","UI.Всплывающие окна","Условие");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯВызываюИсключение(Парам01)","ЯВызываюИсключение","Тогда я вызываю исключение ""Текст исключения""","Вызывает исключение с нужным текстом","Встроенный язык");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Если "Истина" тогда
//@Тогда(Парам01)
Процедура Условие(Выражение) Экспорт
	Результат = Вычислить(Выражение);
	Если Результат Тогда
		Ванесса.УстановитьРезультатУсловия(Истина);
	Иначе	
		Ванесса.УстановитьРезультатУсловия(Ложь);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//Если в окне предупреждения нет текста "Нужный текст" тогда
//@ВОкнеПредупрежденияНетТекстаТогда(Парам01)
Процедура ВОкнеПредупрежденияНетТекстаТогда(ИскомыйТекст) Экспорт
	ОкноПредупреждения = Ванесса.НайтиОкноПредупреждения();
	Если ОкноПредупреждения = Неопределено Тогда
		ВызватьИсключение "Не найдено окно предупреждения";
	КонецЕсли;	 
	
	ТекстПредупреждения = Ванесса.ПолучитьТекстОкнаПредупреждения(ОкноПредупреждения);
	
	
	Если Найти(НРег(ТекстПредупреждения),НРег(ИскомыйТекст)) = 0 Тогда
		Ванесса.УстановитьРезультатУсловия(Истина);
	Иначе	
		Ванесса.УстановитьРезультатУсловия(Ложь);
	КонецЕсли;	 
	
	
КонецПроцедуры


&НаКлиенте
//Тогда я вызываю исключение "Текст исключения"
//@ЯВызываюИсключение(Парам01)
Процедура ЯВызываюИсключение(Текст) Экспорт
	ВызватьИсключение Текст;
КонецПроцедуры
